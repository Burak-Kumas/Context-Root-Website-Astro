---
import "../assets/styles/base.css";
import Footer from "../components/ui/Footer.astro";
import Menu from "../components/ui/Menu.astro";
import Header from "../components/ui/Header.astro";
import Title from "../components/ui/Hero-Title.astro";

interface Props {
  title?: string;
  description?: string;
}
const { title = "Default Title", description = "Default Description" } = Astro.props as Props;
---

<head>
  <meta charset="utf-8" />
  <meta http-equiv="Content-Language" content="en" />
  <meta name="viewport" content="width=device-width" />
  <meta name="description" content={description} />
  <meta name="generator" content={Astro.generator} />
  <script>
    // On page load or when changing themes, best to add inline in `head` to avoid FOUC
    if (
      localStorage.getItem("color-theme") === "dark" ||
      (!("color-theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
  </script>
  <title>{title}</title>
</head>
<body class="m-auto">
  <Menu />
  <Header />
  <slot />
  <Footer />
</body>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const hamburgerBtn = document.getElementById("hamburgerBtn");
    const sidebarMenu = document.getElementById("sidebarMenu");
    const closeBtn = document.getElementById("closeBtn");

    if (sidebarMenu?.classList.contains("flex")) {
      sidebarMenu.classList.add("hidden");
      sidebarMenu.classList.remove("flex");
    }

    hamburgerBtn?.addEventListener("click", () => {
      sidebarMenu?.classList.remove("hidden");
      sidebarMenu?.classList.add("flex");
    });

    closeBtn?.addEventListener("click", () => {
      sidebarMenu?.classList.add("hidden");
      sidebarMenu?.classList.remove("flex");
    });
  });
</script>
